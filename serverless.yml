service: aws-user-auth-template${env:developerStack, ''}

configValidationMode: off
frameworkVersion: '>=2'

custom:
  stackPrefix: ${self:service}-${self:provider.stage}
  userPoolId: !Ref UserPool
  config: ${file(config/index.js)}

  cognito:
    groupName:
      default: 'default'
      moderators: 'moderators'
      admins: 'admins'

  # Prune
  prune:
    automatic: true
    prod: 10
    develop: 1
    staging: 2
    number: 2

  # developDomain: e1-api-protoprime.click
  # prodDomain: api-protoprime.click

  # customDomain:
  #   domainName: ${self:custom.${self:provider.stage, 'develop'}Domain}
  #   basePath: users-ms${env:developerStack, ''}
  #   endpointType: 'regional'
  #   apiType: http

provider:
  name: aws
  runtime: nodejs16.x
  architecture: arm64
  region: ${opt:region, 'us-east-1'}
  accountId: !Ref AWS::AccountId
  stage: ${opt:stage, 'develop'}
  tracing:
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'xray:PutTraceSegments'
            - 'xray:PutTelemetryRecords'
          Resource: '*'
        - Effect: Allow
          Action:
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:AdminAddUserToGroup
          Resource: '*'
  environment:
    SERVICE: ${self:service}
    REGION: ${self:provider.region}
    ACCOUNT_ID: ${self:provider.accountId}
    LOG_LEVEL: DEBUG
    OWNER_PROJECT_NAME: 'Protoprime'
    USERPOOL_ID: ${self:custom.userPoolId}
    USERPOOL_CLIENT_ID: !Ref UserClient
    TABLE_NAME: ${file(resources/index.json):users_table_name}

package:
  individually: false
  excludeDevDependencies: true
  patterns:
    - '!node_modules/**'
  exclude:
    - node_modules/**

plugins:
  - serverless-iam-roles-per-function
  - serverless-prune-plugin
  - serverless-webpack

resources:
  - ${file(resources/tables/table.yml)}

functions:
  - ${file(src/users.yml)}
